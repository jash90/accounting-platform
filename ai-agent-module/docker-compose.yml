version: '3.8'

services:
  agent-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-agent-module
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agentdb
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - VECTOR_DB_URL=http://qdrant:6333
      - S3_BUCKET=${S3_BUCKET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-eu-central-1}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - RATE_LIMIT_WINDOW=60000
      - RATE_LIMIT_MAX_REQUESTS=100
    ports:
      - "3005:3000"
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - qdrant
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - accounting-network

  postgres:
    image: postgres:14-alpine
    container_name: agent-postgres
    environment:
      - POSTGRES_USER=agent_user
      - POSTGRES_PASSWORD=agent_pass
      - POSTGRES_DB=agentdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./ai-agent-module/src/database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - accounting-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agent_user -d agentdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: agent-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - accounting-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: agent-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - accounting-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    container_name: agent-vector-db
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT_LOG_LEVEL=INFO
    networks:
      - accounting-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  accounting-network:
    external: true
