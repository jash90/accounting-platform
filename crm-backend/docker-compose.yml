version: '3.8'

services:
  # CRM Backend API
  crm-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crm-backend
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DATABASE_URL=postgresql://crm_user:crm_password@postgres:5432/crm_platform
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - crm-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: crm-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=crm_platform
      - POSTGRES_USER=crm_user
      - POSTGRES_PASSWORD=crm_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - crm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: crm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - crm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Adminer for database management
  adminer:
    image: adminer:latest
    container_name: crm-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    networks:
      - crm-network
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:

networks:
  crm-network:
    driver: bridge
